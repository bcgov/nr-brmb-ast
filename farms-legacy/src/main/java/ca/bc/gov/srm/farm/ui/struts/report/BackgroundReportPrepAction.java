package ca.bc.gov.srm.farm.ui.struts.report;

import java.io.File;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessages;

import ca.bc.gov.srm.farm.service.ReportService;
import ca.bc.gov.srm.farm.service.ServiceFactory;
import ca.bc.gov.srm.farm.ui.struts.ActionConstants;
import ca.bc.gov.srm.farm.ui.struts.SecureAction;
import ca.bc.gov.srm.farm.util.IOUtils;


/**
 * Allows the user to retrieve the resulting output file generated by
 * BackgroundReportGenerateAction.
 * 
 * Return it as a stream to the browser.
 */
public class BackgroundReportPrepAction extends SecureAction {
	private Logger log = LoggerFactory.getLogger(getClass());

  /**
   * doExecute.
   *
   * @param   mapping     mapping
   * @param   actionForm  actionForm
   * @param   request     request
   * @param   response    response
   *
   * @return  The return value
   *
   * @throws  Exception  On Exception
   */
  @Override
  public ActionForward doExecute(
  	final ActionMapping mapping,
    final ActionForm actionForm, 
    final HttpServletRequest request,
    final HttpServletResponse response) throws Exception {
    log.debug("<doExecute");

    ActionForward forward = mapping.findForward(ActionConstants.SUCCESS);
    ReportForm form = (ReportForm) actionForm;
    ReportService service = ServiceFactory.getReportService();

    ActionMessages errors = service.validateForm(mapping, form, request);

    if (errors.isEmpty()) {
      String reportType = form.getReportType();
      File tempDir = IOUtils.getTempDir(); 
      
      service.writeReportStatusFile(reportType);

      String reportFileName = service.getBackgroundReportFileName(reportType);
      File outputFile = new File(tempDir, reportFileName);
      if(outputFile.exists()) {
        outputFile.delete();
      }

      String url = service.getReportUrl(form);
      form.setReportUrl(url);
    } else {
      saveErrors(request, errors);
      forward = mapping.findForward(ActionConstants.FAILURE);
    }

    log.debug(">doExecute");
    return forward;
  }
  
}
