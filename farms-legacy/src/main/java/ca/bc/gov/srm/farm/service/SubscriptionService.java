/**
 * Copyright (c) 2009,
 * Government of British Columbia,
 * Canada
 *
 * All rights reserved.
 * This information contained herein may not be used in whole or in part
 * without the express written consent of the Government of British
 * Columbia, Canada.
 */
package ca.bc.gov.srm.farm.service;

import ca.bc.gov.srm.farm.exception.ServiceException;

import java.util.List;


/**
 * Used by the webapp to popuplate objects used by the screens.
 */
public interface SubscriptionService {

  /**
   * Get the authorized users for this client.
   *
   * @param   pin pin
   * @return List<AuthorizedUser>
   * @throws  ServiceException  on exception
   */
  List getAuthorizedUsers(final Integer pin) throws ServiceException;

  /**
   * Get the subscriptions for this client.
   *
   * @param  pin pin
   * @return List<ClientSubscription>
   * @throws  ServiceException  on exception
   */
  List getSubscriptions(final Integer pin) throws ServiceException;

  /**
   * Change the status of the subscription to "Revoked"
   *
   * @param   clientSubscriptionId  the subscription ID
   * @param   revisionCount         the revision count
   *
   * @throws  ServiceException  on exception
   */
  void revokeSubscription(final Integer clientSubscriptionId,
    final Integer revisionCount) throws ServiceException;

  /**
   * Change the status of the subscription to "Invalidated"
   *
   * @param   clientSubscriptionId  the subscription ID
   * @param   revisionCount         the revision count
   *
   * @throws  ServiceException  on exception
   */
  void invalidateSubscription(final Integer clientSubscriptionId,
    final Integer revisionCount) throws ServiceException;

  /**
   * @param   agristabilityClientId  client ID
   * @param   pin                    client PIN
   *
   * @return  GenerateSubscriptionResponse the response
   *
   * @throws  ServiceException  on exception
   */
  GenerateSubscriptionResponse generateSubscription(
    final Integer agristabilityClientId, final Integer pin)
    throws ServiceException;


  /**
   * Ask the BCeID web service for the active subscriptions, then update any
   * matching farm_client_subscriptions entries.
   *
   * @param   errorMessages  messages generated by the subscription web service
   *
   * @return  the number of subscriptions activated
   *
   * @throws  ServiceException  on exception
   */
  int activateSubscriptions(final List errorMessages) throws ServiceException;
}
