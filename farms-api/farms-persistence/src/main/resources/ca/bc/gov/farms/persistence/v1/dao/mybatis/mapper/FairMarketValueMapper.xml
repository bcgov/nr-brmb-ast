<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ca.bc.gov.farms.persistence.v1.dao.mybatis.mapper.FairMarketValueMapper">

    <resultMap id="FairMarketValueResultDtoMap" type="ca.bc.gov.farms.persistence.v1.dto.FairMarketValueDto">
        <id property="fairMarketValueId" column="fair_market_value_id" javaType="java.lang.String" jdbcType="VARCHAR" />

        <result property="programYear" column="program_year" javaType="java.lang.Integer" jdbcType="NUMERIC" />
        <result property="inventoryItemCode" column="inventory_item_code" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="inventoryItemDesc" column="inventory_item_desc" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="municipalityCode" column="municipality_code" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="municipalityDesc" column="municipality_desc" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="cropUnitCode" column="crop_unit_code" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="cropUnitDesc" column="crop_unit_desc" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="defaultCropUnitCode" column="default_crop_unit_code" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="defaultCropUnitDesc" column="default_crop_unit_desc" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="period01Price" column="period_01_price" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period02Price" column="period_02_price" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period03Price" column="period_03_price" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period04Price" column="period_04_price" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period05Price" column="period_05_price" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period06Price" column="period_06_price" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period07Price" column="period_07_price" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period08Price" column="period_08_price" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period09Price" column="period_09_price" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period10Price" column="period_10_price" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period11Price" column="period_11_price" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period12Price" column="period_12_price" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period01Variance" column="period_01_variance" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period02Variance" column="period_02_variance" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period03Variance" column="period_03_variance" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period04Variance" column="period_04_variance" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period05Variance" column="period_05_variance" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period06Variance" column="period_06_variance" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period07Variance" column="period_07_variance" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period08Variance" column="period_08_variance" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period09Variance" column="period_09_variance" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period10Variance" column="period_10_variance" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period11Variance" column="period_11_variance" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
        <result property="period12Variance" column="period_12_variance" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />

        <result property="revisionCount" column="revision_count" javaType="java.lang.Integer" jdbcType="NUMERIC" />
        <result property="createUser" column="create_user" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="createDate" column="create_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
        <result property="updateUser" column="update_user" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="updateDate" column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="selectColumns">
        select apt.group_id as fair_market_value_id,
               split_part(apt.group_id, '_', 1)::numeric as program_year,
               iic.inventory_item_code,
               iic.description as inventory_item_desc,
               mc.municipality_code,
               mc.description as municipality_desc,
               cuc.crop_unit_code,
               cuc.description as crop_unit_desc,
               cudc.crop_unit_code as default_crop_unit_code,
               cudc.description as default_crop_unit_desc,
               apt.period_01_price,
               apt.period_02_price,
               apt.period_03_price,
               apt.period_04_price,
               apt.period_05_price,
               apt.period_06_price,
               apt.period_07_price,
               apt.period_08_price,
               apt.period_09_price,
               apt.period_10_price,
               apt.period_11_price,
               apt.period_12_price,
               pvt.period_01_variance,
               pvt.period_02_variance,
               pvt.period_03_variance,
               pvt.period_04_variance,
               pvt.period_05_variance,
               pvt.period_06_variance,
               pvt.period_07_variance,
               pvt.period_08_variance,
               pvt.period_09_variance,
               pvt.period_10_variance,
               pvt.period_11_variance,
               pvt.period_12_variance
    </sql>

    <sql id="fromClause">
        from crosstab($$
            select fmv.program_year || '_' ||
                fmv.inventory_item_code || '_' ||
                fmv.municipality_code || '_' ||
                fmv.crop_unit_code as group_id,
            'period_' || to_char(period, '00') || '_price' as period_str,
            fmv.average_price
            from farms.fair_market_value fmv
            where fmv.program_year = ${programYear}
            order by 1, 2
        $$)
        as apt(group_id text,
               "period_01_price" numeric,
               "period_02_price" numeric,
               "period_03_price" numeric,
               "period_04_price" numeric,
               "period_05_price" numeric,
               "period_06_price" numeric,
               "period_07_price" numeric,
               "period_08_price" numeric,
               "period_09_price" numeric,
               "period_10_price" numeric,
               "period_11_price" numeric,
               "period_12_price" numeric)
        join crosstab($$
            select fmv.program_year || '_' ||
                fmv.inventory_item_code || '_' ||
                fmv.municipality_code || '_' ||
                fmv.crop_unit_code as group_id,
            'period_' || to_char(period, '00') || '_variance' as period_str,
            fmv.percent_variance
            from farms.fair_market_value fmv
            where fmv.program_year = ${programYear}
            order by 1, 2
        $$)
        as pvt(group_id text,
               "period_01_variance" numeric,
               "period_02_variance" numeric,
               "period_03_variance" numeric,
               "period_04_variance" numeric,
               "period_05_variance" numeric,
               "period_06_variance" numeric,
               "period_07_variance" numeric,
               "period_08_variance" numeric,
               "period_09_variance" numeric,
               "period_10_variance" numeric,
               "period_11_variance" numeric,
               "period_12_variance" numeric) on apt.group_id = pvt.group_id
        join farms.inventory_item_code iic on split_part(apt.group_id, '_', 2) = iic.inventory_item_code
        join farms.municipality_code mc on split_part(apt.group_id, '_', 3) = mc.municipality_code
        join farms.crop_unit_code cuc on split_part(apt.group_id, '_', 4) = cuc.crop_unit_code
        left join farms.crop_unit_default cud using (inventory_item_code)
        left join farms.crop_unit_code cudc on cud.crop_unit_code = cudc.crop_unit_code
    </sql>

    <select id="fetch" resultMap="FairMarketValueResultDtoMap">
        <include refid="selectColumns"/>
        <include refid="fromClause"/>
        where apt.group_id = #{fairMarketValueId}
    </select>

    <select id="fetchByProgramYear" resultMap="FairMarketValueResultDtoMap">
        <include refid="selectColumns"/>
        <include refid="fromClause"/>
        order by lower(iic.description),
                 lower(mc.description),
                 lower(cuc.description)
    </select>

    <select id="fetchBy" resultMap="FairMarketValueResultDtoMap">
        <include refid="selectColumns"/>
        <include refid="fromClause"/>
        where iic.inventory_item_code = #{inventoryItemCode, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN}
        and mc.municipality_code = #{municipalityCode, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN}
        and cuc.crop_unit_code = #{cropUnitCode, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN}
        order by lower(iic.description),
                 lower(mc.description),
                 lower(cuc.description)
    </select>

    <insert id="insertFairMarketValue">
        <selectKey keyProperty="fairMarketValueId" resultType="java.lang.Long" order="BEFORE">
            select nextval('farms.seq_fmv')
        </selectKey>
        insert into farms.fair_market_value (
            fair_market_value_id,
            program_year,
            period,
            average_price,
            percent_variance,
            expiry_date,
            inventory_item_code,
            municipality_code,
            crop_unit_code,
            revision_count,
            create_user,
            create_date,
            update_user,
            update_date
        ) values (
            #{fairMarketValueId},
            #{dto.programYear, javaType=java.lang.Integer, jdbcType=NUMERIC, mode=IN},
            #{period, javaType=java.lang.Integer, jdbcType=NUMERIC, mode=IN},
            #{averagePrice, javaType=java.math.BigDecimal, jdbcType=NUMERIC, mode=IN},
            #{percentVariance, javaType=java.math.BigDecimal, jdbcType=NUMERIC, mode=IN},
            null,
            #{dto.inventoryItemCode, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
            #{dto.municipalityCode, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
            #{dto.cropUnitCode, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
            1,
            #{userId, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
            now(),
            #{userId, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
            now()
        )
    </insert>

    <update id="updateFairMarketValue">
        update farms.fair_market_value
        set average_price = #{averagePrice, javaType=java.math.BigDecimal, jdbcType=NUMERIC, mode=IN},
            percent_variance = #{percentVariance, javaType=java.math.BigDecimal, jdbcType=NUMERIC, mode=IN},
            revision_count = revision_count + 1,
            update_user = #{userId, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
            update_date = now()
        where program_year || '_' ||
              inventory_item_code || '_' ||
              municipality_code || '_' ||
              crop_unit_code = #{fairMarketValueId}
        and period = #{period, javaType=java.lang.Integer, jdbcType=NUMERIC, mode=IN}
    </update>

    <delete id="deleteFairMarketValue">
        delete from farms.fair_market_value
        where program_year || '_' ||
              inventory_item_code || '_' ||
              municipality_code || '_' ||
              crop_unit_code = #{fairMarketValueId}
    </delete>
</mapper>